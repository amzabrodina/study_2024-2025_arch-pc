%include 'in_out.asm'
SECTION .data
msg db "Результат: ", 0
SECTION .text
global _start
_start:
pop ecx              ; Извлекаем из стека количество аргументов
pop edx              ; Извлекаем из стека имя программы
sub ecx, 1           ; Уменьшаем ecx на 1 (количество аргументов без названия программы)
mov esi, 0           ; Используем esi для хранения промежуточной суммы
next:
cmp ecx, 0           ; Проверяем, есть ли еще аргументы
jz _end              ; Если аргументов нет, выходим из цикла
pop eax              ; Извлекаем следующий аргумент из стека
call atoi            ; Преобразуем символ в число; Применяем функцию f(x) = 15x - 9
imul eax, 15         ; Умножаем x на 15
sub eax, 9           ; Вычитаем 9
add esi, eax         ; Добавляем к промежуточной сумме: esi += f(x)
loop next            ; Переход к обработке следующего аргумента
_end:
mov eax, msg         ; Вывод сообщения "Результат: "
call sprint
mov eax, esi         ; Записываем сумму в регистр eax
call iprintLF        ; Печать результата
call quit            ; Завершение программы
